@font-face {
  font-family: 'Netflix';
  src: url('https://cine.pgscom.es/fonts/AvenirNextLTPro-Regular.otf');
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: 'Netflix';
  src: url('https://cine.pgscom.es/fonts/AvenirNextLTPro-Regular.otf');
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: 'Netflix';
  src: url('https://cine.pgscom.es/fonts/AvenirNextLTPro-Bold.otf');
  font-weight: 700;
  font-style: normal;
}

html,
body {
  height: 100%;
  overflow-x: hidden;
}

.featured {
  height: 100%;
}

#video {
  /* height: 45%; */ /* This is set via inline style in the HTML */
  /* Styles for #video can be merged with .video-container if desired,
     or kept separate if #video has unique styles beyond what .video-container provides.
     The important part is that the element <div id="video" class="video-container">
     gets the necessary styles for positioning and overflow. */
}


#elvideo {
  /* width: 100%; */ /* REMOVED to let .youtube-cover control dimensions */
  /* height: 100%; */ /* REMOVED to let .youtube-cover control dimensions */
  /* object-fit: cover; */ /* REMOVED - Ineffective for iframe content */
  /* position: absolute; */ /* REMOVED - Handled by .hijo and .youtube-cover classes */
}

.hijo {
  /* centrar vertical y horizontalmente */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}


.sky-image {
  position: fixed;
  top: 15px;
  left: 15px;
  z-index: 9999;
}


.credits {
  font-family: system-ui;
  background: #212429;
  font-size: 11px;
  color: white;
  padding: 0.5rem 0;
  text-align: center;
}
.credits a {
  color: #F865B0;
  text-decoration: none;
}

body {
  background: black;
  color: white;
  margin: 0;
  font-family: netflix;
}

a {
  color: white;
  text-decoration: none;
}

.header {
  padding: 15px 15px 100px;
  position: relative;
  z-index: 2;
  background-image: linear-gradient(to bottom, rgba(0,0,0, .5)  85% , transparent 100% );
}

.navigation-item {
  list-style: none;
  /* border: 1px solid yellow; */
  text-align: center;
}

.navigation {
  padding: 0;
  margin: 0;
  /* border: 1px solid red; */
  display: grid;
  grid-auto-columns: 100px;
  grid-auto-flow: column;
  justify-content: space-around;
}


.featured {
  margin-top: -90px;
  position: relative;
  overflow: hidden;
}

.featured-details {
  /* border: 1px solid red; */
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background-image: linear-gradient(to top, black 0%, black 40%, transparent 100%);
}


.tags {
  /* border: 1px solid yellow; */
  display: flex;
  justify-content: center;
  gap: 10px;
  list-style: none;
  padding: 0;
  margin: 0.75em 1em;
}

.tag {
  /* border: 1px solid red; */
  display: flex;
}

.tag:before {
  content: 'â€¢';
  margin-right: 10px;
  position: relative;
  top: 2px;
}

.tag:first-child::before {
  display: none;
}

.featured-actions {
  /* height: 100px; */
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  padding-bottom: 2em;
}

.button {
  /* border: 1px solid blue; */
  background: white;
  display: flex;
  align-items: center;
  padding: 5px 1em 5px .5em;
  border: none;
  border-radius: 3px;
}

.button::before {
  /* border: 1px solid red; */
  content: '';
  display: inline-block;
  width: 25px;
  height: 25px;
  margin-right: 5px;
}

.button-secondary {
  background: none;
  color: white;
  /* border: 1px solid red; */
  font-size: 1.1em;
  min-width: 100px;
  cursor: pointer;
  border: none;
}

.button-secondary::before {
  display: block;
  /* border: 1px solid green; */
  content: '';
  width: 25px;
  height: 25px;
  margin: auto;
  margin-bottom: 5px;
}

.icon-plus::before {
  background: url('https://cine.pgscom.es/images/icons/plus.svg');
}

.icon-play::before {
  background: url('https://cine.pgscom.es/images/icons/play.svg');
}

.icon-info::before {
  background: url('https://cine.pgscom.es/images/icons/info.svg');
}

.list-content {
  text-align: center;
  margin-top: 1%;
}
.list-item {
  display: inline-block;
  margin: 0.5em 0.5em;
}

.image {
  height: 288px;
  width: 192px;
  border-radius: 15px;
}

.list {
  /* border: 1px solid green; */
  padding: 0 1em;
}

main {
  /* border: 1px solid red; */
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.footer {
  /* border: 1px solid red; */
  position: sticky;
  bottom: 0;
  left: 0;
  right: 0;
  background: black;
  padding: 1em 0 0;
}


.tab-list {
  /* border: 1px solid green; */
  margin: 0;
  padding: 0;
  display: grid;
  grid-auto-flow: column;
  list-style: none;
  color: #6e6e6e;
  padding-bottom: 1em;
}
.tab-list a {
  color: #6e6e6e;
}

.tab-item {
  /* border: 1px solid purple; */
  text-align: center;
  font-size: .9em;
}

.tab-item svg {
  display: block;
  /* border: 1px solid red; */
  margin: auto;
}

.tab-item path{
  fill: #6e6e6e;
}

/* .tab-item:hover path, .tab-item:hover span{
  color: blue;
  fill: blue;
} */

.tab-item:hover :is(path, span) {
 fill: white;
 color: white;
}

.video-container {
    width: 100%; /* MODIFIED from 100vh for standard full-width behavior within parent */
    /* height: 100vh; */ /* Original CSS had this; current height is controlled by inline style on div#video */
    /*overflow: hidden;*/
    /*position: relative;*/ /* ADDED - Establishes positioning context for the iframe */
}

.youtube-clean {
    pointer-events: none; /* Evita clics en el video */
}

/* Ocultar elementos que aparecen al hover */
.video-container::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    /* width: 100vh; */ /* These were likely meant to match .video-container's original width/height */
    /* height: 100vh; */ /* If .video-container is 100% width, these might need adjustment or be removed if not essential */
                           /* For now, assuming these are not critical to the cover effect of the video itself */
    width: 100%; /* Adjusting to match potential new .video-container width logic */
    height: 100%;/* Adjusting to match potential new .video-container height logic */
    pointer-events: none;
}
.youtube-cover {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100vw; /* Ensures video is at least as wide as viewport */
    height: 56.25vw; /* Maintains 16:9 aspect ratio based on viewport width */
    min-height: 100vh; /* Ensures video is at least as tall as viewport */
    min-width: 177.77vh; /* Maintains 16:9 aspect ratio based on viewport height */
    transform: translate(-50%, -50%);
}